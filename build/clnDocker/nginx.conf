# Log Type
log_format svaefh '$remote_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent ' '"$http_referer" "$http_user_agent" "$gzip_ratio" "$http_authorization"';

server {
    listen 80;
    server_name svaefh;

    # Let's Encrypt well-known
    location /.well-known/acme-challenge/ {
        alias /usr/src/svaefh-letsencrypt/;
    }

    # Force HTTPS
    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

server {
    listen 443 ssl;
    server_name svaefh;

    # SSL
    ssl_certificate ssl.crt;
    ssl_certificate_key ssl.key;

    # Logs
    access_log /var/log/nginx/svaefh.access.log svaefh;
    error_log /var/log/nginx/svaefh.error.log warn;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # gzip
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    # Root
    root /usr/src/svaefh;

    # Cache
    location /static {
        expires 1y;
        add_header Vary Accept-Encoding;
        access_log off;
    }

    # Server
    location / {
        try_files $uri /index.html;
    }

    # API
    location /api/v1 {
        proxy_pass http://server:3000;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }
}
